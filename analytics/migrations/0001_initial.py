# Generated by Django 5.0.2 on 2025-05-09 21:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_initial'),
        ('course', '0004_alter_course_code_alter_course_credit_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('active_users', models.IntegerField(default=0)),
                ('total_courses', models.IntegerField(default=0)),
                ('total_enrollments', models.IntegerField(default=0)),
                ('total_quizzes', models.IntegerField(default=0)),
                ('total_assignments', models.IntegerField(default=0)),
                ('system_uptime', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('average_response_time', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('error_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('daily_logins', models.IntegerField(default=0)),
                ('resource_accesses', models.IntegerField(default=0)),
                ('discussion_activities', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'System Analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CourseProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=20)),
                ('academic_year', models.CharField(max_length=20)),
                ('enrollment_count', models.IntegerField(default=0)),
                ('completion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('average_grade', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('dropout_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('resource_views', models.IntegerField(default=0)),
                ('discussion_posts', models.IntegerField(default=0)),
                ('assignment_submissions', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.course')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('course', 'semester', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='LecturerPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=20)),
                ('academic_year', models.CharField(max_length=20)),
                ('student_satisfaction', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('course_completion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('average_student_grade', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('resource_utilization', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('feedback_responses', models.IntegerField(default=0)),
                ('active_engagement', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('course_updates', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.course')),
                ('lecturer', models.ForeignKey(limit_choices_to={'is_lecturer': True}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('lecturer', 'course', 'semester', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='StudentPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=20)),
                ('academic_year', models.CharField(max_length=20)),
                ('quiz_average', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('assignment_average', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('attendance_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('participation_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('overall_grade', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('time_spent_learning', models.DurationField(default=0)),
                ('resources_accessed', models.IntegerField(default=0)),
                ('discussion_participation', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.student')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('student', 'course', 'semester', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='StudentProgressReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(max_length=20)),
                ('academic_year', models.CharField(max_length=20)),
                ('attendance_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('assignment_completion', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('quiz_scores', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('midterm_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('final_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('overall_grade', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('participation_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20)),
                ('strengths', models.TextField(blank=True)),
                ('areas_for_improvement', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='course.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('student', 'course', 'semester', 'academic_year')},
            },
        ),
    ]
